import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.application import MIMEApplication
from dotenv import load_dotenv
import os

load_dotenv(".env")

PROGRAM_NAME = os.getenv("PROGRAM_NAME")


SENDER_EMAIL = os.getenv("SENDER_EMAIL")
SENDER_PWD = os.getenv("SENDER_PWD")


if not SENDER_EMAIL or not SENDER_PWD:
    raise ValueError("Sender email or sender password is not specified")


def share_certificate_via_email(
    recipient_email: str, *, certificate_owner: str, certificate: str
):
    
    subject = "Shared Public Certificate"
    body = f"""
    Dear {recipient_email},

    This email is generated by {PROGRAM_NAME} on behalf of {certificate_owner}. {certificate_owner} has shared their public certificate with you via the {PROGRAM_NAME} platform.

    Please find attached to this email the digital copy of {certificate_owner}'s certificate in ASC format.

    If you have any questions or concerns, please contact the {PROGRAM_NAME} support team. They are here to assist you in any way they can.

    Best regards,

    The {PROGRAM_NAME}
    """


    message = MIMEMultipart()

    
    message["Subject"] = subject
    message.attach(MIMEText(body))
    message["From"] = SENDER_EMAIL
    message["To"] = recipient_email

    with open(certificate, "rb") as f:
        part = MIMEApplication(f.read(), Name=certificate)
    part["Content-Disposition"] = f"attachment; filename={certificate}"
    message.attach(part)

    
    with smtplib.SMTP(
        "smtp.gmail.com", 587
    ) as server: 
        server.ehlo()
        server.starttls()
        server.login(SENDER_EMAIL, SENDER_PWD)
        server.sendmail(SENDER_EMAIL, recipient_email, message.as_string())


if __name__ == "__main__":
    recipient_email = "alexeeva02y@gmail.com"
    certificate_owner = "alexeeva02y@gmail.com"
    filename = "certificate.asc"
    share_certificate_via_email(
        recipient_email, certificate_owner=certificate_owner, certificate=filename
    )
